[build-system]
build-backend = "pdm.backend"
requires = [ "pdm-backend" ]

[project]
name = "zeed-movslib"
version = "0.0.9"
license = { file = "LICENSE" }
requires-python = ">=3.12,<3.14"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "jdk4py>=21.0.4.1",
    "openpyxl>=3.1.5",
    "pypdf>=4.2",
    "tabula-py[jpype]>=2.9.3",
]
urls.Homepage = "https://github.com/ZeeD/movslib"
urls.Repository = "https://github.com/ZeeD/movslib.git"

[dependency-groups]
dev = [
    "coverage>=7.5.4",
    "mypy>=1.10.1",
    "pandas-stubs>=2.2.2.240603",
    "pyproject-fmt>=2.2.4",
    "ruff>=0.5",
    "types-openpyxl>=3.1.5.20240918",
]

[tool.pdm]
distribution = true
plugins = [ "pdm-bump" ]

[tool.pdm.build]
excludes = [ "tests", "demo" ]

[tool.pdm.scripts]
_.env = { PYTHONPATH = "src:tests:demo" }
lint = { composite = [
    "pyproject-fmt pyproject.toml",
    "ruff format {args:.}",
    "ruff check {args:.}",
    "mypy {args:.}",
], keep_going = true }
test = { composite = [
    "coverage run -m unittest discover --verbose --locals --failfast --catch --start-directory tests {args}",
    "coverage report",
    "coverage erase",
] }
bump_and_publish = { composite = [
    "pdm bump patch --commit --tag",
    "pdm publish",
    "git push",
    "git push --tags",
] }

[tool.ruff]
line-length = 80
src = [ "demo", "src", "tests" ]
fix = true
format.quote-style = "single"
format.skip-magic-trailing-comma = true
format.docstring-code-format = true
lint.select = [ "ALL" ]
lint.ignore = [
    "ANN1",
    "COM812",
    "D1",
    "D203",
    "D213",
    "ISC001",
    "PT009",
    "PT027",
    "Q001",
    "Q002",
    "TD002",
    "TD003",
]
lint.extend-per-file-ignores."stubs/**/*.pyi" = [
    "FBT001",
    "FBT002",
    "N802",
    "N803",
    "N815",
    "PLR0913",
]
lint.flake8-annotations.allow-star-arg-any = true
lint.flake8-quotes.docstring-quotes = "single"
lint.flake8-quotes.inline-quotes = "single"
lint.flake8-quotes.multiline-quotes = "single"
lint.flake8-type-checking.quote-annotations = true
lint.isort.force-single-line = true

[tool.pyproject-fmt]
column_width = 80
indent = 4

[tool.coverage.run]
branch = true
source = [ "src", "tests" ]

[tool.coverage.report]
show_missing = true
sort = "Cover"
skip_empty = true

[tool.mypy]
mypy_path = [ "src", "tests", "demo" ]
strict = true
warn_unused_configs = true
